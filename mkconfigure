#!/bin/sh

PROG=$0

system() {
	SYSTEM_CFLAGS=
	SYSTEM_LDFLAGS=
	case $(uname) in
		Linux )
			SYSTEM_CFLAGS=-D_POSIX_C_SOURCE=200809L
			SYSTEM_LDFLAGS=
		;;
		OpenBSD )
			SYSTEM_CFLAGS=
			SYSTEM_LDFLAGS=
		;;
	esac
	echo "system: $(uname)"
	echo "SYSTEM_CFLAGS=" ${SYSTEM_CFLAGS}
	echo "SYSTEM_LDFLAGS=" ${SYSTEM_LDFLAGS}
}

prefix() {
	prefix=$HOME
	if [ "$#" -eq 1 ] ; then prefix=$1 ; fi
	echo "prefix=${prefix}"
}

run() {
	. ./$1
}

pkgs() {
	checkpkg() {
		PKG=$1

		echo "pkg-config ${PKG}"
		pkg-config $PKG
		RET=$?
		if [ "${RET}" -eq 127 ] ; then
			echo "You need to have pkg-config."
			exit 1
		elif [ "${RET}" -ne 0 ] ; then
			echo "You need to have '${PKG}' package installed."
			if [ "${PKG_CONFIG_PATH}" != "" ] ; then
				echo "PKG_CONFIG_PATH=${PKG_CONFIG_PATH}"
			else
				echo "Note: PKG_CONFIG_PATH is not set."
			fi
			exit 1
		fi
	}
	PKGS="$@"
	for a in ${PKGS} ; do
		checkpkg $a
	done
	PKG_CFLAGS=$(pkg-config ${PKGS} --cflags)
	PKG_LDFLAGS=$(pkg-config ${PKGS} --libs)
	echo "PKG_CFLAGS=${PKG_CFLAGS}"
	echo "PKG_LDFLAGS=${PKG_LDFLAGS}"
}

make() {
	if [ -e Makefile.in ] ; then
		echo "create: Makefile"
		echo '# Automatically generated from Makefile.in by configure' >Makefile
		echo >>Makefile
		sed \
			-e "s|@prefix@|${prefix}|g" \
			-e "s|@PKG_CFLAGS@|${PKG_CFLAGS}|g" \
			-e "s|@PKG_LDFLAGS@|${PKG_LDFLAGS}|g" \
			-e "s|@SYSTEM_CFLAGS@|${SYSTEM_CFLAGS}|g" \
			-e "s|@SYSTEM_LDFLAGS@|${SYSTEM_LDFLAGS}|g" \
			Makefile.in >>Makefile
	fi
}

pcfile() {
	PCFILE=$(basename $(pwd)).pc
	echo "create: ${PCFILE}"
	sed "s|@prefix@|${prefix}|g" ${PCFILE}.in >${PCFILE}
}

if [ ! -e configure.in ] ; then
	touch configure.in
fi

add_module() {
	if [ -e $1 ] ; then
		echo ". ./$1" >>configure
	else
		sed -n '/^'$1'()/,/^}/p' $0 >>configure
	fi
}

OPT_MODULES="system pkgs run pcfile"
MODULES="prefix make"

echo '#!/bin/sh' >configure
echo "# Generated by 'mkconfigure' from 'configure.in'" >>configure

for a in ${OPT_MODULES} ; do
	if grep -q $a configure.in ; then
		add_module $a
	fi
done

for a in ${MODULES} ; do
	add_module $a
done

echo "prefix" >>configure
cat configure.in >>configure
echo "make" >>configure

chmod ugo+x configure
